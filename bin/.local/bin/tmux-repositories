#!/usr/bin/env bash

declare -A projectMapping
projectMapping=(
    ["AllegroPay.DevOps"]="devops"
    ["VAbank"]="vabank"
    ["AlleCare"]="care"
    ["AlleDeposits"]="depo"
    ["VAbank.Infrastructure"]="depo"
)
# projects=${(@k)projectMapping}
projects=${!projectMapping[@]}

if [[ $# -eq 1 ]]; then
    selected=$1
else
    selected=$(printf "%s " $projects | xargs -d ' ' -I{} az repos list --project {} | jq '.[].sshUrl' | fzf | tr -d "\"")
fi

if [[ -z $selected ]]; then
    exit 0
fi

repo_name=$(basename $selected)
projectName=$(basename $(dirname $selected))
parent_dir="$HOME/allegropay/${projectMapping[$projectName]}"
parent_dir_name=$(basename $parent_dir)

if ! test -d $parent_dir; then
    echo "Creating $parent_dir"
    mkdir -p $parent_dir
fi

if ! test -d $parent_dir/$repo_name; then
    echo "Cloning repostiory $repo_name"
    pushd $parent_dir
    git clone $selected
    popd
fi


selected_name="$parent_dir_name/$repo_name"
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s $selected_name -c $selected
    exit 0
fi

if ! tmux has-session -t $selected_name 2> /dev/null; then
    tmux new-session -ds $selected_name -c $selected nvim
fi

tmux switch-client -t $selected_name || tmux attach-session -t $selected_name
